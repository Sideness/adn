{"version":3,"sources":["App.js","reportWebVitals.js","components/Welcome.jsx","utils/marks.jsx","components/Subject.jsx","components/SubjectSuccess.jsx","components/Candidate.jsx","components/Candidates.jsx","components/FinalAnswer.jsx","index.js"],"names":["theme","createTheme","App","react_default","a","createElement","rel","href","ThemeProvider","CssBaseline","AppBar","position","Toolbar","Typography","variant","color","noWrap","react_router","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Welcome","style","paddingTop","display","alignItems","justifyContent","Card","maxWidth","CardContent","sx","flex","component","textAlign","marginBottom","Button","Link","to","marks","value","label","Subject","navigate","useNavigate","_React$useState","React","useState","_React$useState2","Object","slicedToArray","subjectPicture","setSubjectPicture","_React$useState3","_React$useState4","gender","setGender","_React$useState5","_React$useState6","age","setAge","_React$useState7","_React$useState8","protein","setProtein","_React$useState9","_React$useState10","error","setError","useEffect","fetch","method","mode","response","json","picture","Grid","container","spacing","item","xs","sm","src","alt","maxHeight","align","ToggleButtonGroup","id","onChange","event","newGender","aria-label","exclusive","margin","ToggleButton","Slider","defaultValue","newAge","step","min","max","valueLabelDisplay","TextField","target","onClick","jsonData","headers","Content-Type","body","JSON","stringify","validAnswers","Snackbar","open","autoHideDuration","onClose","message","SubjectSuccess","Candidate","props","mismatch","setMismatch","gaugePercent","setPercent","firstExpanded","setFirstExpanded","_React$useState11","_React$useState12","secondExpanded","setSecondExpanded","_React$useState13","_React$useState14","CardMedia","height","image","gutterBottom","name","marginTop","Collapse","in","timeout","unmountOnExit","map","prot","match","marginLeft","type","parseInt","InputLabelProps","shrink","valid","filter","it","length","percent","onCandidateValidated","dist_default","colors","textColor","Candidates","data","setData","setValidAnswers","incrementValidAnswers","setTimeout","candidates","padding","key","components_Candidate","FinalAnswer","setName","resultDisplayed","setResultDisplayed","imgUrl","setImgUrl","visibility","rootElement","document","getElementById","render","react_router_dom","path","element","src_App","components_Welcome","components_Subject","components_SubjectSuccess","components_Candidates","components_FinalAnswer"],"mappings":"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","file":"static/js/main.b3023a2f.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { Outlet } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nconst theme = createTheme();\n\nfunction App() {\n  return (\n    <div>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      />\n       <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            ADN - Il faut sauver le Docteur Carma Saha!\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      </ThemeProvider>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\n\nconst Welcome = () => {\n    return(\n        <div style={{ paddingTop: \"20px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n            <Card style={{ maxWidth: \"800px\" }}>\n                <CardContent sx={{ flex: 1 }}>\n                    <Typography component=\"h1\" variant=\"h4\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                        Bienvenue dans la base de données <br /> Transplant-Action.\n                    </Typography>\n                    <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                        Vous souhaitez trouver un donneur compatible pour le Docteur Carma Saha\n                    </Typography>\n                    <Typography style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                        <Button component={Link} to=\"/subject\" variant=\"contained\">Démarrer</Button>\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    );\n};\n\nexport default Welcome;\n","const marks = [\n    {\n      value: 0,\n      label: '0',\n    },\n    {\n      value: 10,\n      label: '10',\n    },\n    {\n      value: 20,\n      label: '20',\n    },\n    {\n      value: 30,\n      label: '30',\n    },\n    {\n      value: 40,\n      label: '40',\n    },\n    {\n      value: 50,\n      label: '50',\n    },\n    {\n      value: 60,\n      label: '60',\n    },\n    {\n      value: 70,\n      label: '70',\n    },\n    {\n      value: 80,\n      label: '80',\n    },\n    {\n      value: 90,\n      label: '90',\n    },\n    {\n      value: 100,\n      label: '100',\n    }\n];\n\nexport default marks;","import React from \"react\";\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport ToggleButton from '@mui/material/ToggleButton'\nimport Button from \"@mui/material/Button\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport marks from \"../utils/marks\";\n\nconst Subject = () => {\n\n  let navigate = useNavigate();\n\n  const [subjectPicture, setSubjectPicture] = React.useState(\"\");\n  const [gender, setGender] = React.useState('');\n  const [age, setAge] = React.useState(30);\n  const [protein, setProtein] = React.useState('');\n  const [error, setError] = React.useState(false);\n\n  React.useEffect(() => {\n    fetch('/subject-picture', {\n        method: 'GET',\n        mode: 'cors'})\n      .then((response) => response.json())\n      .then((picture) => {\n        setSubjectPicture(picture);\n      });\n  }, []);\n\n  function checkAnswers() {\n\n    var jsonData = {\n      \"gender\": gender,\n      \"age\": age,\n      \"protein\": protein\n    };\n  \n    fetch('/check-subject', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(jsonData) })\n      .then((response) => response.json())\n      .then((json) => {\n          if(json.validAnswers) {\n            navigate('/subject-success');\n          } else {\n            setError(true);\n          }\n      });\n  };\n\n  function handleClose() {\n    setError(false);\n  }\n\n    return(\n        <div>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={2}>\n                <img \n                    src={subjectPicture} \n                    alt=\"Subject to save\"\n                    style={{ maxWidth: \"100%\", maxHeight: \"500px\" }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <Card>\n                    <CardContent sx={{ flex: 1 }}>\n                        <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                            Genre\n                        </Typography>\n                        <Typography align=\"center\">\n                            <ToggleButtonGroup \n                              id=\"genderSelect\"\n                              value={gender} onChange={(event, newGender) => { setGender(newGender) }}\n                              variant=\"contained\" aria-label=\"outlined primary button group\"\n                              exclusive={true}\n                              style={{ margin: \"auto\" }}>\n                                <ToggleButton value=\"female\">Femme</ToggleButton>\n                                <ToggleButton value=\"male\">Homme</ToggleButton>\n                            </ToggleButtonGroup>\n                        </Typography>\n                    </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <Card>\n                    <CardContent sx={{ flex: 1 }}>\n                        <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                            Âge\n                        </Typography>\n                        <Typography align=\"center\">\n                            <Slider\n                                aria-label=\"Always visible\"\n                                defaultValue={age}\n                                value={age}\n                                onChange={(event, newAge) => { setAge(newAge) }}\n                                step={1}\n                                min={0}\n                                max={100}\n                                marks={marks}\n                                valueLabelDisplay=\"on\"\n                            />\n                        </Typography>\n                    </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <Card>\n                    <CardContent sx={{ flex: 1 }}>\n                        <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                            Séquence de protéine\n                        </Typography>\n                        <Typography align=\"center\" style={{ marginBottom: \"15px\" }}>\n                            <TextField id=\"filled-basic\" label=\"MRQH...\" variant=\"filled\" value={protein} onChange={(event) => { setProtein(event.target.value) }} />\n                        </Typography>\n                        <Typography align=\"center\">\n                            <Button onClick={checkAnswers}>Vérifier</Button>\n                        </Typography>\n                    </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n            <Snackbar\n              open={error}\n              autoHideDuration={5000}\n              onClose={handleClose}\n              message=\"Faux! Vérifiez vos réponses.\"\n            />\n        </div>\n    );\n};\n\nexport default Subject;","import React from \"react\";\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button'\nimport { Link } from 'react-router-dom';\n\nconst SubjectSuccess = () => {\n    return(\n        <div style={{ paddingTop: \"20px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n            <Card style={{ maxWidth: \"800px\" }}>\n                <CardContent sx={{ flex: 1 }}>\n                    <Typography component=\"h1\" variant=\"h4\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                        Vous avez réussi à décoder la séquence HLA de Barack Obama !\n                    </Typography>\n                    <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                        Mais le temps presse et vous n'avez pas encore de donneur. \n                        Bien heureusement vous disposez de fiches patient avec les informations nécessaires.\n                        Malheureusement, un stagiaire passant par là les a égarées dans des magazines. A vous de les retrouver !\n                    </Typography>\n                    <Typography style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                        <Button component={Link} to=\"/candidates\" variant=\"contained\">Liste des donneurs potentiels</Button>\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    );\n};\n\nexport default SubjectSuccess;","import { Card, CardMedia, CardContent, Typography, ToggleButtonGroup, ToggleButton, Slider, Collapse, Button, TextField, Snackbar } from \"@mui/material\";\nimport React from \"react\";\nimport marks from \"../utils/marks\";\nimport GaugeChart from \"react-gauge-chart\";\n\nconst Candidate = (props) => {\n\n    const [gender, setGender] = React.useState('');\n    const [age, setAge] = React.useState(30);\n    const [mismatch, setMismatch] = React.useState(0);\n    const [gaugePercent, setPercent] = React.useState(0);\n    const [firstExpanded, setFirstExpanded] = React.useState(false);\n    const [secondExpanded, setSecondExpanded] = React.useState(false);\n    const [error, setError] = React.useState(false);\n\n    function checkAnswers() {\n\n        var jsonData = {\n          \"gender\": gender,\n          \"age\": age,\n          \"id\": props.id\n        };\n      \n        fetch('/check-candidate', {\n            method: 'POST',\n            mode: 'cors',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(jsonData) })\n          .then((response) => response.json())\n          .then((json) => {\n              if(json.validAnswers) {\n                setFirstExpanded(true);\n              } else {\n                setFirstExpanded(false);\n                setError(true);\n              }\n          });\n    \n      };\n\n    function checkMismatchs() {\n        let valid = mismatch === props.protein.filter(it => !it.match).length;\n        let percent = props.protein.filter(it => it.match).length / props.protein.length;\n        setPercent(percent);\n        setSecondExpanded(valid);\n        if(valid) {\n            props.onCandidateValidated();\n        } else {\n            setError(true);\n        }\n    }\n\n    function handleClose() {\n        setError(false);\n    }\n\n    return(\n        <Card>\n            <CardMedia\n                component=\"img\"\n                alt=\"\"\n                height=\"140\"\n                image={props.picture}\n            />\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                    {props.name}\n                </Typography>\n                <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                    Genre\n                </Typography>\n                <Typography align=\"center\">\n                    <ToggleButtonGroup \n                        id=\"genderSelect\"\n                        value={gender} onChange={(event, newGender) => { setGender(newGender) }}\n                        variant=\"contained\" aria-label=\"outlined primary button group\"\n                        exclusive={true}\n                        style={{ margin: \"auto\" }}>\n                        <ToggleButton value=\"female\">Femme</ToggleButton>\n                        <ToggleButton value=\"male\">Homme</ToggleButton>\n                    </ToggleButtonGroup>\n                </Typography>\n                <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\", marginTop: \"15px\" }}>\n                    Âge\n                </Typography>\n                <Typography align=\"center\">\n                    <Slider\n                        aria-label=\"Always visible\"\n                        defaultValue={age}\n                        value={age}\n                        onChange={(event, newAge) => { setAge(newAge) }}\n                        step={1}\n                        min={0}\n                        max={100}\n                        marks={marks}\n                        valueLabelDisplay=\"on\"\n                    />\n                </Typography>\n                <Typography align=\"center\">\n                    <Button onClick={checkAnswers}>GO !</Button>\n                </Typography>\n            </CardContent>\n            <Collapse in={firstExpanded} timeout=\"auto\" unmountOnExit>\n                <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\", marginTop: \"15px\" }}>\n                    Séquence\n                </Typography>\n                <Typography gutterBottom variant=\"h5\" component=\"div\" style={{display: \"flex\", justifyContent: \"center\"}}>\n                    {props.protein.map((prot) => {\n                        return prot.match ?\n                            <p style={{color: \"green\", marginLeft: \"4px\"}}>{prot.value}</p>\n                        :\n                            <p style={{color: \"red\", marginLeft: \"4px\"}}>{prot.value}</p>\n                    })}\n                </Typography>\n                <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\", marginTop: \"15px\" }}>\n                    Nombre de mismatchs\n                </Typography>\n                <Typography gutterBottom variant=\"h5\" component=\"div\" align=\"center\">\n                    <TextField\n                        id=\"outlined-number\"\n                        label=\"Nombre\"\n                        type=\"number\"\n                        value={mismatch}\n                        onChange={(event) => { setMismatch(parseInt(event.target.value)) }}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                </Typography>\n                <Typography align=\"center\">\n                    <Button onClick={checkMismatchs}>GO !</Button>\n                </Typography>\n            </Collapse>\n\n            <Collapse in={secondExpanded} timeout=\"auto\" unmountOnExit>\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                    <GaugeChart id=\"gauge\" percent={gaugePercent} colors={['#EA4228', '#F5CD19', '#5BE12C']} textColor=\"#000000\" />\n                </Typography>\n            </Collapse>\n            <Snackbar\n              open={error}\n              autoHideDuration={5000}\n              onClose={handleClose}\n              message=\"Faux! Vérifiez vos réponses.\"\n            />\n        </Card>\n    );\n}\n\nexport default Candidate","import { Grid } from \"@mui/material\";\nimport React from \"react\";\nimport Candidate from \"./Candidate\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Candidates = () => {\n\n    let navigate = useNavigate();\n\n    const [data, setData] = React.useState([]);\n    const [validAnswers, setValidAnswers] = React.useState(0);\n\n    React.useEffect(() => {\n        fetch('/candidates', {\n            method: 'GET',\n            mode: 'cors'})\n          .then((response) => response.json())\n          .then((candidates) => {\n              setData(candidates);\n          });\n    }, []);\n\n    function incrementValidAnswers() {\n        let newValue = validAnswers + 1;\n        setValidAnswers(newValue);\n        checkValidAnswers();\n    }\n\n    function checkValidAnswers() {\n        if(data.length - 1 === validAnswers) {\n            setTimeout(function () {\n                navigate('/final-answer');\n            }, 5000);\n        }\n    }\n\n    return(\n        <Grid container spacing={2} style={{ padding: \"15px\" }}>\n            {data.map((item) => (\n                <Grid key={item.id} item xs={12} sm={3}>\n                    <Candidate id={item.id} name={item.name} picture={item.picture} protein={item.protein} onCandidateValidated={incrementValidAnswers} />\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default Candidates;","import React from \"react\";\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport TextField from \"@mui/material/TextField\";\nimport Button from '@mui/material/Button';\n\nconst FinalAnswer = () => {\n\n    const [name, setName] = React.useState(\"\");\n    const [resultDisplayed, setResultDisplayed] = React.useState(false);\n    const [imgUrl, setImgUrl] = React.useState(\"\");\n\n    function checkName() {\n\n        var jsonData = {\n            \"name\": name\n        };\n\n        fetch('/final-answer', {\n            method: 'POST',\n            mode: 'cors',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(jsonData) })\n          .then((response) => response.json())\n          .then((json) => {\n              if(json.validAnswers) {\n                setImgUrl(process.env.PUBLIC_URL+\"bravo.gif\");\n                setResultDisplayed(true);\n              } else {\n                setImgUrl(process.env.PUBLIC_URL+\"try-again.gif\");\n                setResultDisplayed(true);\n                //TODO Display error message\n              }\n          });\n    };\n\n    return(\n        <div style={{ paddingTop: \"20px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n            <Card style={{ maxWidth: \"800px\" }}>\n                <CardContent sx={{ flex: 1 }}>\n                    <Typography component=\"h1\" variant=\"h4\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                        Qui est le meilleur donneur ?\n                    </Typography>\n                    <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                        Entrez le nom du donneur ou de la donneuse. Soyez certain de votre choix, vous n'aurez pas de seconde chance !\n                        Vérifiez donc bien l'orthographe.\n                    </Typography>\n                    <Typography component=\"h2\" variant=\"h5\" style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                        <TextField id=\"outlined-basic\" label=\"Entrez le nom\" variant=\"outlined\" value={name} onChange={(event) => { setName(event.target.value) }} />\n                    </Typography>\n                    <Typography style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                        <Button  variant=\"contained\" onClick={checkName}>Vérifier</Button>\n                    </Typography>\n                    <Typography style={{ textAlign: \"center\", marginBottom: \"15px\", visibility: resultDisplayed ? 'visible' : 'hidden'}}>\n                        <img src={imgUrl} alt=\"result\" />\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    );\n};\n\nexport default FinalAnswer;","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Welcome from './components/Welcome';\nimport Subject from './components/Subject';\nimport SubjectSuccess from './components/SubjectSuccess';\nimport Candidates from './components/Candidates';\nimport FinalAnswer from './components/FinalAnswer';\n\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"/\" element={<Welcome />} />\n        <Route path=\"/subject\" element={<Subject />} />\n        <Route path=\"/subject-success\" element={<SubjectSuccess />} />\n        <Route path=\"/candidates\" element={<Candidates />} />\n        <Route path=\"/final-answer\" element={<FinalAnswer />} />\n        <Route\n          path=\"*\"\n          element={\n            <main style={{ padding: \"1rem\" }}>\n              <p>There's nothing here!</p>\n            </main>\n          }\n        />\n      </Route>\n    </Routes>\n  </BrowserRouter>,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}